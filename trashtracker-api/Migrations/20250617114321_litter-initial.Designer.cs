// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using trashtracker_api.Data;

#nullable disable

namespace trashtracker_api.Migrations
{
    [DbContext(typeof(LitterDBContext))]
    [Migration("20250617114321_litter-initial")]
    partial class litterinitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("trashtracker_api.Models.FavoriteLocation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LitterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FavoriteLocations");
                });

            modelBuilder.Entity("trashtracker_api.Models.Litter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Classification")
                        .HasColumnType("int");

                    b.Property<float>("Confidence")
                        .HasColumnType("real");

                    b.Property<DateTime>("DetectionTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("LocationLatitude")
                        .HasColumnType("real");

                    b.Property<float>("LocationLongitude")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Litter", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "87EC8C26-0E4F-403A-94A5-9B1AC13710AE",
                            Classification = 1,
                            Confidence = 0.95f,
                            DetectionTime = new DateTime(2025, 6, 17, 14, 23, 45, 123, DateTimeKind.Unspecified),
                            LocationLatitude = 37.7749f,
                            LocationLongitude = -122.4194f
                        });
                });

            modelBuilder.Entity("trashtracker_api.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("trashtracker_api.Models.WeatherInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Conditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Humidity")
                        .HasColumnType("real");

                    b.Property<float>("TemperatureCelsius")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("WeatherInfo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "87EC8C26-0E4F-403A-94A5-9B1AC13710AE",
                            Conditions = "Clear",
                            Humidity = 50f,
                            TemperatureCelsius = 20f
                        });
                });

            modelBuilder.Entity("trashtracker_api.Models.Litter", b =>
                {
                    b.HasOne("trashtracker_api.Models.WeatherInfo", "WeatherInfo")
                        .WithOne("Litter")
                        .HasForeignKey("trashtracker_api.Models.Litter", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeatherInfo");
                });

            modelBuilder.Entity("trashtracker_api.Models.WeatherInfo", b =>
                {
                    b.Navigation("Litter");
                });
#pragma warning restore 612, 618
        }
    }
}
